// Code generated by ogen, DO NOT EDIT.

package openapi

import (
	"context"
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	// AddPage implements addPage operation.
	//
	// Add new page.
	//
	// POST /pages
	AddPage(ctx context.Context, req OptAddPageReq, params AddPageParams) (*Page, error)
	// GetFile implements getFile operation.
	//
	// Get file content.
	//
	// GET /pages/{id}/file/{file_id}
	GetFile(ctx context.Context, params GetFileParams) (GetFileRes, error)
	// GetPage implements getPage operation.
	//
	// Get page details.
	//
	// GET /pages/{id}
	GetPage(ctx context.Context, params GetPageParams) (GetPageRes, error)
	// GetPages implements getPages operation.
	//
	// Get all pages.
	//
	// GET /pages
	GetPages(ctx context.Context) (Pages, error)
	// NewError creates *ErrorStatusCode from error returned by handler.
	//
	// Used for common default response.
	NewError(ctx context.Context, err error) *ErrorStatusCode
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h Handler
	baseServer
}

// NewServer creates new Server.
func NewServer(h Handler, opts ...ServerOption) (*Server, error) {
	s, err := newServerConfig(opts...).baseServer()
	if err != nil {
		return nil, err
	}
	return &Server{
		h:          h,
		baseServer: s,
	}, nil
}
